plugins {
    id "com.github.johnrengelman.shadow" version "8.1.1"
}

group = 'io.valandur'
version = '1.0-SNAPSHOT'

subprojects {
    apply plugin: 'com.github.johnrengelman.shadow'
    apply plugin: 'maven-publish'
    apply plugin: 'java-library'

    group = project.group
    version = project.version

    sourceCompatibility = '17'
    targetCompatibility = '17'

    repositories {
        mavenCentral()
    }

    jar {
        archiveClassifier = 'slim'

        dependsOn(shadowJar)
    }

    configurations {
        implementation.extendsFrom shade
    }

    shadowJar {
        configurations = [project.configurations.shade]

        archiveClassifier = ''

        // minimize()
        mergeServiceFiles()

        // We can't move all of "com" because then we're moving the minecraft namespace
        relocate 'com.ctc', 'io.valandur.shade.com.ctc'
        relocate 'com.fasterxml', 'io.valandur.shade.com.fasterxml'
        // We can't move all of "com.sun" because then we're moving "com.sun.management", which contains OS info
        relocate 'com.sun.activation', 'io.valandur.shade.com.sun.activation'
        relocate 'com.sun.research', 'io.valandur.shade.com.sun.research'

        relocate 'graphql', 'io.valandur.shade.graphql'

        // We can't move all of "io" because then we're moving our own namespace
        relocate 'io.github', 'io.valandur.shade.io.github'
        relocate 'io.leangen', 'io.valandur.shade.io.leangen'
        relocate 'io.swagger', 'io.valandur.shade.io.swagger'

        relocate 'jakarta', 'io.valandur.shade.jakarta'

        relocate 'javassist', 'io.valandur.shade.javassist'

        relocate 'javax', 'io.valandur.shade.javax'

        relocate 'jersey', 'io.valandur.shade.jersey'

        // We can't move all of "net" because this used to include minecraft namespaces
        relocate 'net.dongliu', 'io.valandur.shade.net.dongliu'

        relocate 'nonapi', 'io.valandur.shade.nonapi'

        // Don't relocate slf4j
        relocate 'org.antlr', 'io.valandur.shade.org.antlr'
        relocate 'org.apache', 'io.valandur.shade.org.apache'
        relocate 'org.codehaus', 'io.valandur.shade.org.codehaus'
        relocate 'org.aopalliance', 'io.valandur.shade.org.aopalliance'
        relocate 'org.dataloader', 'io.valandur.shade.org.dataloader'
        relocate 'org.eclipse', 'io.valandur.shade.org.eclipse'
        relocate 'org.glassfish', 'io.valandur.shade.org.glassfish'
        relocate 'org.jvnet', 'io.valandur.shade.org.jvnet'
        relocate 'org.reactivestreams', 'io.valandur.shade.org.reactivestreams'
        relocate 'org.yaml', 'io.valandur.shade.org.yaml'
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
}

tasks.withType(AbstractArchiveTask).configureEach {
    preserveFileTimestamps = false
    reproducibleFileOrder = true
}
