plugins {
    id "com.github.johnrengelman.shadow" version "8.1.1"
}

group = 'io.valandur'
version = '1.0-SNAPSHOT'

subprojects {
    apply plugin: 'com.github.johnrengelman.shadow'
    apply plugin: 'maven-publish'
    apply plugin: 'java-library'

    group = project.group
    version = project.version

    sourceCompatibility = '17'
    targetCompatibility = '17'

    repositories {
        mavenCentral()
    }

    jar {
        enabled = false
        dependsOn(shadowJar)
    }

    configurations {
        implementation.extendsFrom shade
    }

    shadowJar {
        configurations = [project.configurations.shade]

        archiveClassifier.set('')

        mergeServiceFiles()

        /*relocate 'com.fasterxml', 'io.valandur.shade.com.fasterxml'
        relocate 'com.sun.research', 'io.valandur.shade.com.sun.research'

        // If we enable this then we have to fix strings in our code
        // relocate 'graphql', 'io.valandur.shade.graphql'

        relocate 'io.github', 'io.valandur.shade.io.github'
        relocate 'io.leangen.graphql', 'io.valandur.shade.io.leangen.graphql'

        relocate 'jakarta.annotation', 'io.valandur.shade.jakarta.annotation'
        relocate 'jakarta.inject', 'io.valandur.shade.jakarta.inject'
        relocate 'jakarta.servlet', 'io.valandur.shade.jakarta.servlet'
        relocate 'jakarta.validation', 'io.valandur.shade.jakarta.validation'
        relocate 'jakarta.ws', 'io.valandur.shade.jakarta.ws'

        relocate 'javassist', 'io.valandur.shade.javassist'

        relocate 'javax.activation', 'io.valandur.shade.javax.activation'
        relocate 'javax.servlet', 'io.valandur.shade.javax.servlet'
        relocate 'javax.ws', 'io.valandur.shade.javax.ws'
        // If we enable this then Sponge (and others?) just break
        // relocate 'javax.xml', 'io.valandur.shadow.javax.xml'

        relocate 'jersey.repackaged', 'io.valandur.shade.jersey.repackaged'

        relocate 'net.dongliu', 'io.valandur.shade.net.dongliu'

        relocate 'nonapi.io', 'io.valandur.shade.nonapi.io'

        relocate 'org.antlr', 'io.valandur.shade.org.antlr'
        relocate 'org.aopalliance', 'io.valandur.shade.org.aopalliance'
        relocate 'org.dataloader', 'io.valandur.shade.org.dataloader'
        relocate 'org.eclipse', 'io.valandur.shade.org.eclipse'
        relocate 'org.glassfish', 'io.valandur.shade.org.glassfish'
        relocate 'org.jvnet', 'io.valandur.shade.org.jvnet'
        relocate 'org.reactivestreams', 'io.valandur.shade.org.reactivestreams'
        relocate 'org.slf4j', 'io.valandur.shade.org.slf4j'*/
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
}

tasks.withType(AbstractArchiveTask).configureEach {
    preserveFileTimestamps = false
    reproducibleFileOrder = true
}
